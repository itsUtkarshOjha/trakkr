services:
  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile.dev
    container_name: core-service-dev
    ports:
      - "5173:5173"
    restart: always
    volumes:
      - ./core-service:/app
      - /app/node_modules # Prevents overwriting node_modules
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      DATABASE_URL: postgresql://mainuser:5689utk123@postgres-db-dev:5432/trakkr?schema=public
      REDIS_URL: redis://redis:6379
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_HOST: rabbitmq-service-dev
      RABBITMQ_PORT: 5672
      NODE_ENV: development
    networks:
      - trakkr-network

  feature-service:
    build:
      context: ./feature-service
      dockerfile: Dockerfile.dev
    container_name: feature-service-dev
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - ./feature-service:/app
      - /app/node_modules
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_HOST: rabbitmq-service-dev
      RABBITMQ_PORT: 5672
      NODE_ENV: development
    networks:
      - trakkr-network

  postgres:
    image: postgres:15
    container_name: postgres-db-dev
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: mainuser
      POSTGRES_PASSWORD: 5689utk123
    volumes:
      - postgres-data:/var/lib/postgresql/data-3
    networks:
      - trakkr-network

  redis:
    image: redis:alpine
    container_name: redis-cache-dev
    restart: always
    ports:
      - "6379:6379"
    networks:
      - trakkr-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-service-dev
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - trakkr-network

volumes:
  postgres-data:

networks:
  trakkr-network:
